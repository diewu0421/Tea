package com.gshl.tea.databinding;
import com.gshl.tea.R;
import com.gshl.tea.BR;
import android.view.View;
public class GoodLayoutBinding extends android.databinding.ViewDataBinding  {

    private static final android.databinding.ViewDataBinding.IncludedLayouts sIncludes;
    private static final android.util.SparseIntArray sViewsWithIds;
    static {
        sIncludes = null;
        sViewsWithIds = new android.util.SparseIntArray();
        sViewsWithIds.put(R.id.toggleCategory, 3);
        sViewsWithIds.put(R.id.custom_scroll, 4);
    }
    // views
    public final android.support.v7.widget.RecyclerView categoryId;
    public final com.gshl.tea.module.good.widgets.CustomHorizontalScrollView customScroll;
    private final android.widget.LinearLayout mboundView0;
    private final android.support.v7.widget.RecyclerView mboundView2;
    public final android.widget.ImageView toggleCategory;
    // variables
    private com.gshl.tea.adapter.CommonRVAdapter mCategoryAdapter;
    private android.support.v7.widget.GridLayoutManager mRvManager;
    private com.gshl.tea.adapter.CommonRVAdapter mGoodAdapter;
    private android.support.v7.widget.LinearLayoutManager mRvManagerLinear;
    // values
    // listeners
    // Inverse Binding Event Handlers

    public GoodLayoutBinding(android.databinding.DataBindingComponent bindingComponent, View root) {
        super(bindingComponent, root, 0);
        final Object[] bindings = mapBindings(bindingComponent, root, 5, sIncludes, sViewsWithIds);
        this.categoryId = (android.support.v7.widget.RecyclerView) bindings[1];
        this.categoryId.setTag(null);
        this.customScroll = (com.gshl.tea.module.good.widgets.CustomHorizontalScrollView) bindings[4];
        this.mboundView0 = (android.widget.LinearLayout) bindings[0];
        this.mboundView0.setTag(null);
        this.mboundView2 = (android.support.v7.widget.RecyclerView) bindings[2];
        this.mboundView2.setTag(null);
        this.toggleCategory = (android.widget.ImageView) bindings[3];
        setRootTag(root);
        // listeners
        invalidateAll();
    }

    @Override
    public void invalidateAll() {
        synchronized(this) {
                mDirtyFlags = 0x20L;
        }
        requestRebind();
    }

    @Override
    public boolean hasPendingBindings() {
        synchronized(this) {
            if (mDirtyFlags != 0) {
                return true;
            }
        }
        return false;
    }

    public boolean setVariable(int variableId, Object variable) {
        switch(variableId) {
            case BR.categoryAdapter :
                setCategoryAdapter((com.gshl.tea.adapter.CommonRVAdapter) variable);
                return true;
            case BR.rvManager :
                setRvManager((android.support.v7.widget.GridLayoutManager) variable);
                return true;
            case BR.goodAdapter :
                setGoodAdapter((com.gshl.tea.adapter.CommonRVAdapter) variable);
                return true;
            case BR.rvManagerLinear :
                setRvManagerLinear((android.support.v7.widget.LinearLayoutManager) variable);
                return true;
            case BR.value :
                return true;
        }
        return false;
    }

    public void setValue(int value) {
        // not used, ignore
    }
    public int getValue() {
        return 0;
    }
    public void setCategoryAdapter(com.gshl.tea.adapter.CommonRVAdapter categoryAdapter) {
        this.mCategoryAdapter = categoryAdapter;
        synchronized(this) {
            mDirtyFlags |= 0x1L;
        }
        notifyPropertyChanged(BR.categoryAdapter);
        super.requestRebind();
    }
    public com.gshl.tea.adapter.CommonRVAdapter getCategoryAdapter() {
        return mCategoryAdapter;
    }
    public void setRvManager(android.support.v7.widget.GridLayoutManager rvManager) {
        this.mRvManager = rvManager;
        synchronized(this) {
            mDirtyFlags |= 0x2L;
        }
        notifyPropertyChanged(BR.rvManager);
        super.requestRebind();
    }
    public android.support.v7.widget.GridLayoutManager getRvManager() {
        return mRvManager;
    }
    public void setGoodAdapter(com.gshl.tea.adapter.CommonRVAdapter goodAdapter) {
        this.mGoodAdapter = goodAdapter;
        synchronized(this) {
            mDirtyFlags |= 0x8L;
        }
        notifyPropertyChanged(BR.goodAdapter);
        super.requestRebind();
    }
    public com.gshl.tea.adapter.CommonRVAdapter getGoodAdapter() {
        return mGoodAdapter;
    }
    public void setRvManagerLinear(android.support.v7.widget.LinearLayoutManager rvManagerLinear) {
        this.mRvManagerLinear = rvManagerLinear;
        synchronized(this) {
            mDirtyFlags |= 0x10L;
        }
        notifyPropertyChanged(BR.rvManagerLinear);
        super.requestRebind();
    }
    public android.support.v7.widget.LinearLayoutManager getRvManagerLinear() {
        return mRvManagerLinear;
    }

    @Override
    protected boolean onFieldChange(int localFieldId, Object object, int fieldId) {
        switch (localFieldId) {
        }
        return false;
    }

    @Override
    protected void executeBindings() {
        long dirtyFlags = 0;
        synchronized(this) {
            dirtyFlags = mDirtyFlags;
            mDirtyFlags = 0;
        }
        com.gshl.tea.adapter.CommonRVAdapter categoryAdapter = mCategoryAdapter;
        android.support.v7.widget.GridLayoutManager rvManager = mRvManager;
        com.gshl.tea.adapter.CommonRVAdapter goodAdapter = mGoodAdapter;
        android.support.v7.widget.LinearLayoutManager rvManagerLinear = mRvManagerLinear;

        if ((dirtyFlags & 0x21L) != 0) {
        }
        if ((dirtyFlags & 0x22L) != 0) {
        }
        if ((dirtyFlags & 0x28L) != 0) {
        }
        if ((dirtyFlags & 0x30L) != 0) {
        }
        // batch finished
        if ((dirtyFlags & 0x21L) != 0) {
            // api target 1

            this.categoryId.setAdapter(categoryAdapter);
        }
        if ((dirtyFlags & 0x30L) != 0) {
            // api target 1

            this.categoryId.setLayoutManager(rvManagerLinear);
        }
        if ((dirtyFlags & 0x28L) != 0) {
            // api target 1

            this.mboundView2.setAdapter(goodAdapter);
        }
        if ((dirtyFlags & 0x22L) != 0) {
            // api target 1

            this.mboundView2.setLayoutManager(rvManager);
        }
    }
    // Listener Stub Implementations
    // callback impls
    // dirty flag
    private  long mDirtyFlags = 0xffffffffffffffffL;

    public static GoodLayoutBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot) {
        return inflate(inflater, root, attachToRoot, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static GoodLayoutBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot, android.databinding.DataBindingComponent bindingComponent) {
        return android.databinding.DataBindingUtil.<GoodLayoutBinding>inflate(inflater, com.gshl.tea.R.layout.good_layout, root, attachToRoot, bindingComponent);
    }
    public static GoodLayoutBinding inflate(android.view.LayoutInflater inflater) {
        return inflate(inflater, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static GoodLayoutBinding inflate(android.view.LayoutInflater inflater, android.databinding.DataBindingComponent bindingComponent) {
        return bind(inflater.inflate(com.gshl.tea.R.layout.good_layout, null, false), bindingComponent);
    }
    public static GoodLayoutBinding bind(android.view.View view) {
        return bind(view, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static GoodLayoutBinding bind(android.view.View view, android.databinding.DataBindingComponent bindingComponent) {
        if (!"layout/good_layout_0".equals(view.getTag())) {
            throw new RuntimeException("view tag isn't correct on view:" + view.getTag());
        }
        return new GoodLayoutBinding(bindingComponent, view);
    }
    /* flag mapping
        flag 0 (0x1L): categoryAdapter
        flag 1 (0x2L): rvManager
        flag 2 (0x3L): value
        flag 3 (0x4L): goodAdapter
        flag 4 (0x5L): rvManagerLinear
        flag 5 (0x6L): null
    flag mapping end*/
    //end
}