package com.gshl.tea.databinding;
import com.gshl.tea.R;
import com.gshl.tea.BR;
import android.view.View;
public class HotSellerItemLayoutBinding extends android.databinding.ViewDataBinding  {

    private static final android.databinding.ViewDataBinding.IncludedLayouts sIncludes;
    private static final android.util.SparseIntArray sViewsWithIds;
    static {
        sIncludes = null;
        sViewsWithIds = new android.util.SparseIntArray();
        sViewsWithIds.put(R.id.home_hot_seller_price, 4);
    }
    // views
    public final android.widget.ImageView homeHotSellerImg;
    public final android.widget.LinearLayout homeHotSellerPrice;
    public final android.widget.TextView homeHotSellerTitle;
    private final android.widget.RelativeLayout mboundView0;
    private final android.widget.ImageView mboundView3;
    // variables
    private com.gshl.tea.module.home.bean.HotSellerGood mHotSeller;
    // values
    // listeners
    private OnClickListenerImpl mAndroidViewViewOnCl;
    private OnClickListenerImpl1 mAndroidViewViewOnCl1;
    // Inverse Binding Event Handlers

    public HotSellerItemLayoutBinding(android.databinding.DataBindingComponent bindingComponent, View root) {
        super(bindingComponent, root, 1);
        final Object[] bindings = mapBindings(bindingComponent, root, 5, sIncludes, sViewsWithIds);
        this.homeHotSellerImg = (android.widget.ImageView) bindings[1];
        this.homeHotSellerImg.setTag(null);
        this.homeHotSellerPrice = (android.widget.LinearLayout) bindings[4];
        this.homeHotSellerTitle = (android.widget.TextView) bindings[2];
        this.homeHotSellerTitle.setTag(null);
        this.mboundView0 = (android.widget.RelativeLayout) bindings[0];
        this.mboundView0.setTag(null);
        this.mboundView3 = (android.widget.ImageView) bindings[3];
        this.mboundView3.setTag(null);
        setRootTag(root);
        // listeners
        invalidateAll();
    }

    @Override
    public void invalidateAll() {
        synchronized(this) {
                mDirtyFlags = 0x2L;
        }
        requestRebind();
    }

    @Override
    public boolean hasPendingBindings() {
        synchronized(this) {
            if (mDirtyFlags != 0) {
                return true;
            }
        }
        return false;
    }

    public boolean setVariable(int variableId, Object variable) {
        switch(variableId) {
            case BR.hotSeller :
                setHotSeller((com.gshl.tea.module.home.bean.HotSellerGood) variable);
                return true;
        }
        return false;
    }

    public void setHotSeller(com.gshl.tea.module.home.bean.HotSellerGood hotSeller) {
        updateRegistration(0, hotSeller);
        this.mHotSeller = hotSeller;
        synchronized(this) {
            mDirtyFlags |= 0x1L;
        }
        notifyPropertyChanged(BR.hotSeller);
        super.requestRebind();
    }
    public com.gshl.tea.module.home.bean.HotSellerGood getHotSeller() {
        return mHotSeller;
    }

    @Override
    protected boolean onFieldChange(int localFieldId, Object object, int fieldId) {
        switch (localFieldId) {
            case 0 :
                return onChangeHotSeller((com.gshl.tea.module.home.bean.HotSellerGood) object, fieldId);
        }
        return false;
    }
    private boolean onChangeHotSeller(com.gshl.tea.module.home.bean.HotSellerGood hotSeller, int fieldId) {
        switch (fieldId) {
            case BR._all: {
                synchronized(this) {
                        mDirtyFlags |= 0x1L;
                }
                return true;
            }
        }
        return false;
    }

    @Override
    protected void executeBindings() {
        long dirtyFlags = 0;
        synchronized(this) {
            dirtyFlags = mDirtyFlags;
            mDirtyFlags = 0;
        }
        android.view.View.OnClickListener androidViewViewOnCli = null;
        android.view.View.OnClickListener androidViewViewOnCli1 = null;
        com.gshl.tea.module.home.bean.HotSellerGood hotSeller = mHotSeller;
        java.lang.String titleHotSeller = null;
        java.lang.String goodImgUrlHotSeller = null;

        if ((dirtyFlags & 0x3L) != 0) {



                if (hotSeller != null) {
                    // read hotSeller::onItemClick
                    androidViewViewOnCli = (((mAndroidViewViewOnCl == null) ? (mAndroidViewViewOnCl = new OnClickListenerImpl()) : mAndroidViewViewOnCl).setValue(hotSeller));
                    // read hotSeller::onShopCarClick
                    androidViewViewOnCli1 = (((mAndroidViewViewOnCl1 == null) ? (mAndroidViewViewOnCl1 = new OnClickListenerImpl1()) : mAndroidViewViewOnCl1).setValue(hotSeller));
                    // read hotSeller.title
                    titleHotSeller = hotSeller.getTitle();
                    // read hotSeller.goodImgUrl
                    goodImgUrlHotSeller = hotSeller.getGoodImgUrl();
                }
        }
        // batch finished
        if ((dirtyFlags & 0x3L) != 0) {
            // api target 1

            com.gshl.tea.module.home.utils.DBUtils.loadHotSellerImg(this.homeHotSellerImg, goodImgUrlHotSeller);
            android.databinding.adapters.TextViewBindingAdapter.setText(this.homeHotSellerTitle, titleHotSeller);
            this.mboundView0.setOnClickListener(androidViewViewOnCli);
            this.mboundView3.setOnClickListener(androidViewViewOnCli1);
        }
    }
    // Listener Stub Implementations
    public static class OnClickListenerImpl implements android.view.View.OnClickListener{
        private com.gshl.tea.module.home.bean.HotSellerGood value;
        public OnClickListenerImpl setValue(com.gshl.tea.module.home.bean.HotSellerGood value) {
            this.value = value;
            return value == null ? null : this;
        }
        @Override
        public void onClick(android.view.View arg0) {
            this.value.onItemClick(arg0);
        }
    }
    public static class OnClickListenerImpl1 implements android.view.View.OnClickListener{
        private com.gshl.tea.module.home.bean.HotSellerGood value;
        public OnClickListenerImpl1 setValue(com.gshl.tea.module.home.bean.HotSellerGood value) {
            this.value = value;
            return value == null ? null : this;
        }
        @Override
        public void onClick(android.view.View arg0) {
            this.value.onShopCarClick(arg0);
        }
    }
    // callback impls
    // dirty flag
    private  long mDirtyFlags = 0xffffffffffffffffL;

    public static HotSellerItemLayoutBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot) {
        return inflate(inflater, root, attachToRoot, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static HotSellerItemLayoutBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot, android.databinding.DataBindingComponent bindingComponent) {
        return android.databinding.DataBindingUtil.<HotSellerItemLayoutBinding>inflate(inflater, com.gshl.tea.R.layout.hot_seller_item_layout, root, attachToRoot, bindingComponent);
    }
    public static HotSellerItemLayoutBinding inflate(android.view.LayoutInflater inflater) {
        return inflate(inflater, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static HotSellerItemLayoutBinding inflate(android.view.LayoutInflater inflater, android.databinding.DataBindingComponent bindingComponent) {
        return bind(inflater.inflate(com.gshl.tea.R.layout.hot_seller_item_layout, null, false), bindingComponent);
    }
    public static HotSellerItemLayoutBinding bind(android.view.View view) {
        return bind(view, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static HotSellerItemLayoutBinding bind(android.view.View view, android.databinding.DataBindingComponent bindingComponent) {
        if (!"layout/hot_seller_item_layout_0".equals(view.getTag())) {
            throw new RuntimeException("view tag isn't correct on view:" + view.getTag());
        }
        return new HotSellerItemLayoutBinding(bindingComponent, view);
    }
    /* flag mapping
        flag 0 (0x1L): hotSeller
        flag 1 (0x2L): null
    flag mapping end*/
    //end
}