package com.gshl.tea.databinding;
import com.gshl.tea.R;
import com.gshl.tea.BR;
import android.view.View;
public class HideOrderGoodLayoutBinding extends android.databinding.ViewDataBinding  {

    private static final android.databinding.ViewDataBinding.IncludedLayouts sIncludes;
    private static final android.util.SparseIntArray sViewsWithIds;
    static {
        sIncludes = null;
        sViewsWithIds = new android.util.SparseIntArray();
        sViewsWithIds.put(R.id.filter_container, 2);
        sViewsWithIds.put(R.id.order_by_comprehensive, 3);
        sViewsWithIds.put(R.id.order_by_sales, 4);
        sViewsWithIds.put(R.id.order_by_price, 5);
        sViewsWithIds.put(R.id.filter_arrow, 6);
        sViewsWithIds.put(R.id.change_list_style, 7);
        sViewsWithIds.put(R.id.filter, 8);
    }
    // views
    public final android.widget.LinearLayout changeListStyle;
    public final android.widget.LinearLayout filter;
    public final android.widget.TextView filterArrow;
    public final android.widget.LinearLayout filterContainer;
    private final android.support.v7.widget.RecyclerView mboundView1;
    public final android.widget.RadioButton orderByComprehensive;
    public final android.widget.LinearLayout orderByPrice;
    public final android.widget.RadioButton orderBySales;
    public final android.widget.LinearLayout orderContainer;
    // variables
    private android.support.v7.widget.GridLayoutManager mHideRvManager;
    private com.gshl.tea.adapter.CommonRVAdapter mNormalRvAdapter;
    // values
    // listeners
    // Inverse Binding Event Handlers

    public HideOrderGoodLayoutBinding(android.databinding.DataBindingComponent bindingComponent, View root) {
        super(bindingComponent, root, 0);
        final Object[] bindings = mapBindings(bindingComponent, root, 9, sIncludes, sViewsWithIds);
        this.changeListStyle = (android.widget.LinearLayout) bindings[7];
        this.filter = (android.widget.LinearLayout) bindings[8];
        this.filterArrow = (android.widget.TextView) bindings[6];
        this.filterContainer = (android.widget.LinearLayout) bindings[2];
        this.mboundView1 = (android.support.v7.widget.RecyclerView) bindings[1];
        this.mboundView1.setTag(null);
        this.orderByComprehensive = (android.widget.RadioButton) bindings[3];
        this.orderByPrice = (android.widget.LinearLayout) bindings[5];
        this.orderBySales = (android.widget.RadioButton) bindings[4];
        this.orderContainer = (android.widget.LinearLayout) bindings[0];
        this.orderContainer.setTag(null);
        setRootTag(root);
        // listeners
        invalidateAll();
    }

    @Override
    public void invalidateAll() {
        synchronized(this) {
                mDirtyFlags = 0x4L;
        }
        requestRebind();
    }

    @Override
    public boolean hasPendingBindings() {
        synchronized(this) {
            if (mDirtyFlags != 0) {
                return true;
            }
        }
        return false;
    }

    public boolean setVariable(int variableId, Object variable) {
        switch(variableId) {
            case BR.hideRvManager :
                setHideRvManager((android.support.v7.widget.GridLayoutManager) variable);
                return true;
            case BR.normalRvAdapter :
                setNormalRvAdapter((com.gshl.tea.adapter.CommonRVAdapter) variable);
                return true;
        }
        return false;
    }

    public void setHideRvManager(android.support.v7.widget.GridLayoutManager hideRvManager) {
        this.mHideRvManager = hideRvManager;
        synchronized(this) {
            mDirtyFlags |= 0x1L;
        }
        notifyPropertyChanged(BR.hideRvManager);
        super.requestRebind();
    }
    public android.support.v7.widget.GridLayoutManager getHideRvManager() {
        return mHideRvManager;
    }
    public void setNormalRvAdapter(com.gshl.tea.adapter.CommonRVAdapter normalRvAdapter) {
        this.mNormalRvAdapter = normalRvAdapter;
        synchronized(this) {
            mDirtyFlags |= 0x2L;
        }
        notifyPropertyChanged(BR.normalRvAdapter);
        super.requestRebind();
    }
    public com.gshl.tea.adapter.CommonRVAdapter getNormalRvAdapter() {
        return mNormalRvAdapter;
    }

    @Override
    protected boolean onFieldChange(int localFieldId, Object object, int fieldId) {
        switch (localFieldId) {
        }
        return false;
    }

    @Override
    protected void executeBindings() {
        long dirtyFlags = 0;
        synchronized(this) {
            dirtyFlags = mDirtyFlags;
            mDirtyFlags = 0;
        }
        android.support.v7.widget.GridLayoutManager hideRvManager = mHideRvManager;
        com.gshl.tea.adapter.CommonRVAdapter normalRvAdapter = mNormalRvAdapter;

        if ((dirtyFlags & 0x5L) != 0) {
        }
        if ((dirtyFlags & 0x6L) != 0) {
        }
        // batch finished
        if ((dirtyFlags & 0x6L) != 0) {
            // api target 1

            this.mboundView1.setAdapter(normalRvAdapter);
        }
        if ((dirtyFlags & 0x5L) != 0) {
            // api target 1

            this.mboundView1.setLayoutManager(hideRvManager);
        }
    }
    // Listener Stub Implementations
    // callback impls
    // dirty flag
    private  long mDirtyFlags = 0xffffffffffffffffL;

    public static HideOrderGoodLayoutBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot) {
        return inflate(inflater, root, attachToRoot, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static HideOrderGoodLayoutBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot, android.databinding.DataBindingComponent bindingComponent) {
        return android.databinding.DataBindingUtil.<HideOrderGoodLayoutBinding>inflate(inflater, com.gshl.tea.R.layout.hide_order_good_layout, root, attachToRoot, bindingComponent);
    }
    public static HideOrderGoodLayoutBinding inflate(android.view.LayoutInflater inflater) {
        return inflate(inflater, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static HideOrderGoodLayoutBinding inflate(android.view.LayoutInflater inflater, android.databinding.DataBindingComponent bindingComponent) {
        return bind(inflater.inflate(com.gshl.tea.R.layout.hide_order_good_layout, null, false), bindingComponent);
    }
    public static HideOrderGoodLayoutBinding bind(android.view.View view) {
        return bind(view, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static HideOrderGoodLayoutBinding bind(android.view.View view, android.databinding.DataBindingComponent bindingComponent) {
        if (!"layout/hide_order_good_layout_0".equals(view.getTag())) {
            throw new RuntimeException("view tag isn't correct on view:" + view.getTag());
        }
        return new HideOrderGoodLayoutBinding(bindingComponent, view);
    }
    /* flag mapping
        flag 0 (0x1L): hideRvManager
        flag 1 (0x2L): normalRvAdapter
        flag 2 (0x3L): null
    flag mapping end*/
    //end
}