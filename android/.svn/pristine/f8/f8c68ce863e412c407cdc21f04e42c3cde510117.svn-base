package com.gshl.tea.module.home.activity;

import android.content.Intent;
import android.support.v7.widget.LinearLayoutManager;
import android.util.Log;
import android.view.View;

import com.google.gson.Gson;
import com.gshl.tea.BR;
import com.gshl.tea.R;
import com.gshl.tea.activity.BaseFragment;
import com.gshl.tea.adapter.CommonRVAdapter;
import com.gshl.tea.databinding.HomeLayoutBinding;
import com.gshl.tea.module.good.ui.activity.SearchActivity;
import com.gshl.tea.module.home.bean.Area;
import com.gshl.tea.module.home.bean.HotSellerGood;
import com.gshl.tea.utils.ToastUtils;
import com.zhy.http.okhttp.OkHttpUtils;
import com.zhy.http.okhttp.callback.Callback;

import java.util.ArrayList;
import java.util.List;

import okhttp3.Call;
import okhttp3.Response;

/**
 * Created by ZengLingWen on 2017/2/21.
 */

public class HomeFragment extends BaseFragment implements View.OnClickListener {


    private static final int HOME_JUMP_TO_SEARCH = 1;
    private HomeLayoutBinding bind;
    private List<HotSellerGood> mDataList;
    private CommonRVAdapter adapter;

    @Override
    protected void init() {

        //初始化一些属性
        initProperty();
        //初始化控件
        initView();
        //初始化数据
        initData();
        //初始化adapter
        initAdapter();
        //初始化事件
        initEvent();
    }

    private void initProperty() {
        bind = (HomeLayoutBinding) this.binding;
        mDataList = new ArrayList<>();

        bind.setMarquee("通知跑马灯通知跑马灯通知跑马灯通知跑马灯通知跑马灯通知跑马灯通知跑马灯通知跑马灯通知跑马灯通知跑马灯通知跑马灯通知跑马灯");
    }

    private void initView() {

    }

    private void initAdapter() {

        //给RecyclerView设置布局管理器 这是设置为线性的布局管理器
        bind.setHotSellerLayoutManager(new LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, false));
        //给RecyclerView设置适配器
        adapter = new CommonRVAdapter(mDataList, BR.hotSeller, R.layout.hot_seller_item_layout);
        bind.setHotSellerAdapter(adapter);
    }

    private void initData() {
        //模拟网络数据
        getData();
    }

    private void initEvent() {
        bind.homeJumpToSearch.setOnClickListener(this);
        bind.homeToMessageList.setOnClickListener(this);
        for (int i = 0; i < bind.homeNav.getChildCount(); i++) {
            bind.homeNav.getChildAt(i).setOnClickListener(this);
        }
    }

    private void getData() {
        for (int i = 0; i < 10; i++) {
            HotSellerGood hotSellerGood = new HotSellerGood();
            hotSellerGood.setGoodImgUrl("http://avatar.csdn.net/4/9/8/1_a10615.jpg");
            hotSellerGood.setPrice("￥33.00" + i);
            hotSellerGood.setPosition(mDataList.size());
            hotSellerGood.setTitle("百草味  草莓干200g 蜜饯水果干\n果脯  干吃的零食" + i);
            mDataList.add(hotSellerGood);

        }
    }

    @Override
    protected void loadData() {

        //OkHttp 请求网络实例
        OkHttpUtils
                .get()
                .url("http://route.showapi.com/9-9")
                .addParams("showapi_sign", "46bc1a1faabe4f189cf66710228c39db")
                .addParams("showapi_appid", 32417 + "")
                .addParams("area", "深圳")
                .build()
                .execute(new Callback<Area>() {
                    @Override
                    public Area parseNetworkResponse(Response response, int id) throws Exception {
                        String result = response.body().string();
                        Area area = new Gson().fromJson(result, Area.class);
                        return area;
                    }

                    @Override
                    public void onError(Call call, Exception e, int id) {
                        Log.e("result", "error");
                    }

                    @Override
                    public void onResponse(Area response, int id) {
                        Log.e("result", response.toString());
                    }
                });
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()) {

            //跳转至搜索页面
            case R.id.home_jump_to_search:
                startActivityForResult(new Intent(getActivity(), SearchActivity.class), HOME_JUMP_TO_SEARCH);
                break;

            //跳转至消息列表
            case R.id.home_to_message_list:
                startActivity(new Intent(getActivity(), MessageActivity.class));
                break;

            //收藏商品
            case R.id.collection_shop:
                ToastUtils.showShortToast(getActivity(), "收藏商品");
                startActivity(new Intent(getActivity(), CollectShopActivity.class));
                break;
            //近期订货
            case R.id.order_recent:

                break;

            //再次购买
            case R.id.buy_again:

                break;

            //新品上架
            case R.id.new_goods:

                break;
        }
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
    }

    @Override
    protected int getLayoutId() {
        return R.layout.home_layout;
    }
}
