package com.gshl.tea.databinding;
import com.gshl.tea.R;
import com.gshl.tea.BR;
import android.view.View;
public class GoodListItemBinding extends android.databinding.ViewDataBinding  {

    private static final android.databinding.ViewDataBinding.IncludedLayouts sIncludes;
    private static final android.util.SparseIntArray sViewsWithIds;
    static {
        sIncludes = null;
        sViewsWithIds = new android.util.SparseIntArray();
        sViewsWithIds.put(R.id.good_list_right, 8);
        sViewsWithIds.put(R.id.good_list_dx, 9);
        sViewsWithIds.put(R.id.remark, 10);
        sViewsWithIds.put(R.id.edit_ramark, 11);
    }
    // views
    public final android.widget.ImageView editRamark;
    public final android.widget.TextView goodListDx;
    public final android.widget.ImageView goodListImg;
    public final android.widget.TextView goodListPrivilege;
    public final android.widget.TextView goodListRemarkTv;
    public final android.widget.LinearLayout goodListRight;
    public final android.widget.TextView goodListTaste;
    public final android.widget.TextView goodListTitle;
    private final android.widget.LinearLayout mboundView0;
    private final android.widget.TextView mboundView5;
    public final android.widget.TextView remark;
    public final android.widget.TextView textView2;
    // variables
    private com.gshl.tea.module.order.bean.GoodList mGoodList;
    // values
    // listeners
    // Inverse Binding Event Handlers

    public GoodListItemBinding(android.databinding.DataBindingComponent bindingComponent, View root) {
        super(bindingComponent, root, 1);
        final Object[] bindings = mapBindings(bindingComponent, root, 12, sIncludes, sViewsWithIds);
        this.editRamark = (android.widget.ImageView) bindings[11];
        this.goodListDx = (android.widget.TextView) bindings[9];
        this.goodListImg = (android.widget.ImageView) bindings[1];
        this.goodListImg.setTag(null);
        this.goodListPrivilege = (android.widget.TextView) bindings[4];
        this.goodListPrivilege.setTag(null);
        this.goodListRemarkTv = (android.widget.TextView) bindings[7];
        this.goodListRemarkTv.setTag(null);
        this.goodListRight = (android.widget.LinearLayout) bindings[8];
        this.goodListTaste = (android.widget.TextView) bindings[3];
        this.goodListTaste.setTag(null);
        this.goodListTitle = (android.widget.TextView) bindings[2];
        this.goodListTitle.setTag(null);
        this.mboundView0 = (android.widget.LinearLayout) bindings[0];
        this.mboundView0.setTag(null);
        this.mboundView5 = (android.widget.TextView) bindings[5];
        this.mboundView5.setTag(null);
        this.remark = (android.widget.TextView) bindings[10];
        this.textView2 = (android.widget.TextView) bindings[6];
        this.textView2.setTag(null);
        setRootTag(root);
        // listeners
        invalidateAll();
    }

    @Override
    public void invalidateAll() {
        synchronized(this) {
                mDirtyFlags = 0x4L;
        }
        requestRebind();
    }

    @Override
    public boolean hasPendingBindings() {
        synchronized(this) {
            if (mDirtyFlags != 0) {
                return true;
            }
        }
        return false;
    }

    public boolean setVariable(int variableId, Object variable) {
        switch(variableId) {
            case BR.goodList :
                setGoodList((com.gshl.tea.module.order.bean.GoodList) variable);
                return true;
        }
        return false;
    }

    public void setGoodList(com.gshl.tea.module.order.bean.GoodList goodList) {
        updateRegistration(0, goodList);
        this.mGoodList = goodList;
        synchronized(this) {
            mDirtyFlags |= 0x1L;
        }
        notifyPropertyChanged(BR.goodList);
        super.requestRebind();
    }
    public com.gshl.tea.module.order.bean.GoodList getGoodList() {
        return mGoodList;
    }

    @Override
    protected boolean onFieldChange(int localFieldId, Object object, int fieldId) {
        switch (localFieldId) {
            case 0 :
                return onChangeGoodList((com.gshl.tea.module.order.bean.GoodList) object, fieldId);
        }
        return false;
    }
    private boolean onChangeGoodList(com.gshl.tea.module.order.bean.GoodList goodList, int fieldId) {
        switch (fieldId) {
            case BR.remark: {
                synchronized(this) {
                        mDirtyFlags |= 0x2L;
                }
                return true;
            }
            case BR._all: {
                synchronized(this) {
                        mDirtyFlags |= 0x1L;
                }
                return true;
            }
        }
        return false;
    }

    @Override
    protected void executeBindings() {
        long dirtyFlags = 0;
        synchronized(this) {
            dirtyFlags = mDirtyFlags;
            mDirtyFlags = 0;
        }
        java.lang.String tasteGoodList = null;
        java.lang.String priceGoodList = null;
        java.lang.String goodTitleGoodList = null;
        java.lang.String privilegeGoodList = null;
        java.lang.String remarkGoodList = null;
        java.lang.String goodImgGoodList = null;
        int countGoodList = 0;
        java.lang.String countGoodListString = null;
        com.gshl.tea.module.order.bean.GoodList goodList = mGoodList;

        if ((dirtyFlags & 0x7L) != 0) {


            if ((dirtyFlags & 0x5L) != 0) {

                    if (goodList != null) {
                        // read goodList.taste
                        tasteGoodList = goodList.getTaste();
                        // read goodList.price
                        priceGoodList = goodList.getPrice();
                        // read goodList.goodTitle
                        goodTitleGoodList = goodList.getGoodTitle();
                        // read goodList.privilege
                        privilegeGoodList = goodList.getPrivilege();
                        // read goodList.goodImg
                        goodImgGoodList = goodList.getGoodImg();
                        // read goodList.count
                        countGoodList = goodList.getCount();
                    }


                    // read (goodList.count) + ("件")
                    countGoodListString = (countGoodList) + ("件");
            }

                if (goodList != null) {
                    // read goodList.remark
                    remarkGoodList = goodList.getRemark();
                }
        }
        // batch finished
        if ((dirtyFlags & 0x5L) != 0) {
            // api target 1

            com.gshl.tea.module.home.utils.DBUtils.loadHotSellerImg(this.goodListImg, goodImgGoodList);
            android.databinding.adapters.TextViewBindingAdapter.setText(this.goodListPrivilege, privilegeGoodList);
            android.databinding.adapters.TextViewBindingAdapter.setText(this.goodListTaste, tasteGoodList);
            android.databinding.adapters.TextViewBindingAdapter.setText(this.goodListTitle, goodTitleGoodList);
            android.databinding.adapters.TextViewBindingAdapter.setText(this.mboundView5, countGoodListString);
            android.databinding.adapters.TextViewBindingAdapter.setText(this.textView2, priceGoodList);
        }
        if ((dirtyFlags & 0x7L) != 0) {
            // api target 1

            android.databinding.adapters.TextViewBindingAdapter.setText(this.goodListRemarkTv, remarkGoodList);
        }
    }
    // Listener Stub Implementations
    // callback impls
    // dirty flag
    private  long mDirtyFlags = 0xffffffffffffffffL;

    public static GoodListItemBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot) {
        return inflate(inflater, root, attachToRoot, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static GoodListItemBinding inflate(android.view.LayoutInflater inflater, android.view.ViewGroup root, boolean attachToRoot, android.databinding.DataBindingComponent bindingComponent) {
        return android.databinding.DataBindingUtil.<GoodListItemBinding>inflate(inflater, com.gshl.tea.R.layout.good_list_item, root, attachToRoot, bindingComponent);
    }
    public static GoodListItemBinding inflate(android.view.LayoutInflater inflater) {
        return inflate(inflater, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static GoodListItemBinding inflate(android.view.LayoutInflater inflater, android.databinding.DataBindingComponent bindingComponent) {
        return bind(inflater.inflate(com.gshl.tea.R.layout.good_list_item, null, false), bindingComponent);
    }
    public static GoodListItemBinding bind(android.view.View view) {
        return bind(view, android.databinding.DataBindingUtil.getDefaultComponent());
    }
    public static GoodListItemBinding bind(android.view.View view, android.databinding.DataBindingComponent bindingComponent) {
        if (!"layout/good_list_item_0".equals(view.getTag())) {
            throw new RuntimeException("view tag isn't correct on view:" + view.getTag());
        }
        return new GoodListItemBinding(bindingComponent, view);
    }
    /* flag mapping
        flag 0 (0x1L): goodList
        flag 1 (0x2L): goodList.remark
        flag 2 (0x3L): null
    flag mapping end*/
    //end
}